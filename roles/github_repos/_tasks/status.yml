---
- name: Ensure the directory exists for git repo
  file:
    state: directory
    path: "{{ project_path }}"

- name: If git status fails, check the directory for existing files
  block:
  - name: git status
    command: git status
    args:
      chdir: "{{ project_path }}"
    register: git_status_results
  rescue:
  - name: Fetch the target directory contents
    find:
      paths: "{{ project_path }}"
      file_type: any
      hidden: yes
    register: files_in_project_dir

  - name: The destination directory must be empty for us to clone into it
    assert:
      that:
        files_in_project_dir.matched == 0
  # - name: If files are found in directory, open terminal at project_path to allow user to examine and delete/move found files
  #   include_role:
  #     name: manage_project
  #     tasks_from: open_terminal_at_project_path.yml
  #   when: files_in_project_dir.matched > 0

  # - name: Waiting until the project path is empty {{ project_path }}
  #   find:
  #     paths: "{{ project_path }}"
  #     file_type: any
  #     hidden: yes
  #   register: all_files_in_project_dir
  #   until: all_files_in_project_dir.matched == 0
  #   retries: 200
  #   delay: 5

- include_tasks: update.yml
